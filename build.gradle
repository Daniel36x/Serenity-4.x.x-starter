buildscript {
    ext.serenityCoreVersion = '4.1.11'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:4.1.14")
        classpath "net.serenity-bdd:serenity-single-page-report:$serenityCoreVersion"
    }
}

plugins {
    id("net.serenity-bdd.serenity-gradle-plugin") version "4.1.14"
    id 'java'
    id 'eclipse'
    id 'idea'
}


defaultTasks 'clean','test','aggregate'



compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"


repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
    logbackVersion = '1.2.10'
    lombokVersion = '1.18.22'
    seleniumVersion = '4.13.0'
}

dependencies {

    implementation group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '4.10.0'
   implementation "org.seleniumhq.selenium:selenium-java:$seleniumVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

    implementation ("net.serenity-bdd:serenity-core:${serenityCoreVersion}")
    implementation "net.serenity-bdd:serenity-junit5:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-rest-assured:${serenityCoreVersion}"

    implementation "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}"

    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.6'
    implementation group: 'io.rest-assured', name: 'json-schema-validator', version: '4.3.3'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.2'



    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}





serenity {
    testRoot = "java/org/example"
    requirementsBaseDir = "java/org/example"
    reports = ["single-page-html"]
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate)